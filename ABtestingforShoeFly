import codecademylib
import pandas as pd

ad_clicks = pd.read_csv('ad_clicks.csv')

#1 examine the first few rows of ad_clicks
print(ad_clicks.head(5))

#2 how many views came from each utm_source?
views_count = ad_clicks.groupby('utm_source').user_id.count().reset_index()

#3 create a new column called is_click, which is True if ad_click_timestamp is not null and False otherwise
ad_clicks['is_click'] = ad_clicks.ad_click_timestamp.isnull()

#4 create clicks_by_source
clicks_by_source = ad_clicks.groupby(['utm_source', 'is_click']).user_id.count().reset_index()

#5 pivot the data so that the columns are is_click, is_click is utm_source and values are user_id
clicks_pivot = clicks_by_source.pivot(
  columns = 'is_click',
  index = 'utm_source', 
  values = 'user_id'
).reset_index()

#6 create new column in clicks_pivot called percent_clicked which is equal to the percent users who clicked the ad from each utm_source
clicks_pivot['percent_clicked'] = clicks_pivot[True]/(clicks_pivot[True] + clicks_pivot[False])

#8 The column experimental_group tells us whether the user was shown Ad A or Ad B 
#Were approximately the same number of people shown both adds
exp_group_count = ad_clicks.groupby('experimental_group').user_id.count().reset_index()

#9 The Product Manager for the A/B test thinks that the clicks might have changed by day of the week -Start by creating two DataFrames a_clicks and b_clicks, which contain only the results for A group and B group, respectively
a_clicks = ad_clicks[ad_clicks.experimental_group == 'A']
b_clicks = ad_clicks[ad_clicks.experimental_group == 'B']

#10 For each group (a_clicks and b_clicks), calculate the percent of users who clicked on the ad by day
a_clicks_by_day = a_clicks.groupby(['is_click', 'day']).user_id.count().reset_index()

a_clicks_pivot = a_clicks_by_day.pivot(
  columns = 'is_click',
  index = 'day',
  values = 'user_id')

a_clicks_pivot['percent_clicked'] = a_clicks_pivot[True]/(a_clicks_pivot[True] + a_clicks_pivot[False])

print(a_clicks_pivot)

#b_clicks
b_clicks_by_day = b_clicks.groupby(['is_click', 'day']).user_id.count().reset_index()

b_clicks_pivot = b_clicks_by_day.pivot(
  columns = 'is_click',
  index = 'day',
  values = 'user_id')

b_clicks_pivot['percent_clicked'] = b_clicks_pivot[True]/(b_clicks_pivot[True] + b_clicks_pivot[False])

print(b_clicks_pivot)
